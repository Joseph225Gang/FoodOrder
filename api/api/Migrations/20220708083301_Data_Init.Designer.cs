// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Context;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(FoodContext))]
    [Migration("20220708083301_Data_Init")]
    partial class Data_Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("api.Model.Food", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Foods");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Food");
                });

            modelBuilder.Entity("api.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleName")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api.Model.Beverage", b =>
                {
                    b.HasBaseType("api.Model.Food");

                    b.HasDiscriminator().HasValue("Beverage");

                    b.HasData(
                        new
                        {
                            Id = new Guid("82c819c6-c692-4b25-9e72-7738923fdbd7"),
                            ImageUrl = "/assets/beverage4.jpg",
                            Name = "可口可樂",
                            Price = 30
                        },
                        new
                        {
                            Id = new Guid("e838a336-7c52-4bda-bb2e-530b9970fcdc"),
                            ImageUrl = "/assets/beverage3.jpg",
                            Name = "雪碧",
                            Price = 30
                        },
                        new
                        {
                            Id = new Guid("f9eabae4-bd05-4244-8fb8-8e62b089e471"),
                            ImageUrl = "/assets/beverage1.jpg",
                            Name = "蘋果汁",
                            Price = 25
                        },
                        new
                        {
                            Id = new Guid("a34710eb-d845-4a4a-952e-61b7221517d4"),
                            ImageUrl = "/assets/beverage2.jpg",
                            Name = "柳橙汁",
                            Price = 25
                        });
                });

            modelBuilder.Entity("api.Model.Dessert", b =>
                {
                    b.HasBaseType("api.Model.Food");

                    b.HasDiscriminator().HasValue("Dessert");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b41afb9d-6975-4597-86ee-ba22c42b4eae"),
                            ImageUrl = "/assets/dessert3.jpg",
                            Name = "巧克力冰淇淋",
                            Price = 30
                        },
                        new
                        {
                            Id = new Guid("a0ee1368-ce5f-4fca-808d-4ec4d734dc50"),
                            ImageUrl = "/assets/dessert1.jpg",
                            Name = "巧克力蛋糕",
                            Price = 30
                        },
                        new
                        {
                            Id = new Guid("aea1e362-3574-4476-8b2a-8040889ce8ef"),
                            ImageUrl = "/assets/dessert2.jpg",
                            Name = "蛋塔",
                            Price = 25
                        });
                });

            modelBuilder.Entity("api.Model.MainDish", b =>
                {
                    b.HasBaseType("api.Model.Food");

                    b.HasDiscriminator().HasValue("MainDish");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61742284-c67f-4eaf-8504-7e405be41218"),
                            ImageUrl = "/assets/main3.jpg",
                            Name = "火腿蛋漢堡",
                            Price = 70
                        },
                        new
                        {
                            Id = new Guid("7a8db558-9993-4b68-b879-0c355cb64db3"),
                            ImageUrl = "/assets/main1.jpg",
                            Name = "鱈魚堡",
                            Price = 65
                        },
                        new
                        {
                            Id = new Guid("752dcf3f-b3ca-4ea2-8236-bc11777b2688"),
                            ImageUrl = "/assets/main2.jpg",
                            Name = "海洋珍珠堡",
                            Price = 75
                        },
                        new
                        {
                            Id = new Guid("0d6c4474-b2e1-48d4-867b-ced346c70734"),
                            ImageUrl = "/assets/main4.jpg",
                            Name = "燒肉堡",
                            Price = 80
                        },
                        new
                        {
                            Id = new Guid("74d034db-106e-476b-9d27-c8fe563456b3"),
                            ImageUrl = "/assets/main5.jpg",
                            Name = "美式炸雞",
                            Price = 85
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
